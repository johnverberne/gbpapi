<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<parent>
		<groupId>nl.rivm.nca</groupId>
		<artifactId>nca-parent</artifactId>
		<version>1.0-SNAPSHOT</version>
	</parent>

	<modelVersion>4.0.0</modelVersion>
	<artifactId>nca-webserver</artifactId>
	<name>NCA webserver</name>
	<description>Natural Capital Assessment Webserver</description>
	<packaging>war</packaging>
	
	<properties>
		<jetty-version>9.2.9.v20150224</jetty-version>
		<beanvalidation-version>1.1.0.Final</beanvalidation-version>
	</properties>
	
	<dependencies>
		<dependency>
			<groupId>nl.rivm.nca</groupId>
			<artifactId>nca-api</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>nl.rivm.nca</groupId>
			<artifactId>nca-lib</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>nl.rivm.nca</groupId>
			<artifactId>nca-pcraster</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
          <groupId>com.google.code.gson</groupId>
          <artifactId>gson</artifactId>
          <version>2.3</version>
        </dependency>
        <dependency>
          <groupId>com.google.gwt</groupId>
          <artifactId>gwt-user</artifactId>
          <version>2.8.2</version>
        </dependency>
		<dependency>
			<groupId>io.swagger</groupId>
			<artifactId>swagger-jersey2-jaxrs</artifactId>
			<version>${swagger-jersey2-jaxrs.version}</version>
		</dependency>
		<!-- This dependency is already present in swagger-jersey2-jaxrs, but because we're using Java8 we need at least jersey 2.7.
         Overriding works. We should upgrade to a newer version of Swagger when they decide to upgrade Jersey. -->
		<dependency>
			<groupId>org.glassfish.jersey.containers</groupId>
			<artifactId>jersey-container-servlet-core</artifactId>
			<version>2.7</version>
		</dependency>
		<dependency>
			<groupId>org.apache.tomcat</groupId>
			<artifactId>tomcat-servlet-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
			<version>2.2.6</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-slf4j-impl</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.9</version>
		</dependency>
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.6</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>
	</dependencies>

	<build>
		<!-- Tomcat 7 deployment name -->
		<finalName>${project.artifactId}</finalName>
		
		<plugins>
	<!-- 
	      <plugin>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>${jetty-version}</version>
				<configuration>
					<webApp>
						<contextPath>/</contextPath>
					</webApp>
					<webAppSourceDirectory>target/${project.artifactId}-${project.version}</webAppSourceDirectory>
					<stopPort>8079</stopPort>
					<stopKey>stopit</stopKey>
					<stopWait>10</stopWait>
					<httpConnector>
						<port>8080</port>
						<idleTimeout>60000</idleTimeout>
					</httpConnector>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>javax.validation</groupId>
						<artifactId>validation-api</artifactId>
						<version>${beanvalidation-version}</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<id>start-jetty</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>start</goal>
						</goals>
						<configuration>
							<scanIntervalSeconds>0</scanIntervalSeconds>
							<daemon>true</daemon>
						</configuration>
					</execution>
					<execution>
						<id>stop-jetty</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			-->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>${project.build.directory}/swagger/src/gen/java</source>
								<source>${project.build.directory}/swagger/src/main/java</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>buildnumber-maven-plugin</artifactId>
				<configuration>
					<doCheck>false</doCheck>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<webResources>
						<webResource>
							<directory>${project.basedir}/src/main/webapp/WEB-INF</directory>
							<includes>
								<include>web.xml</include>
							</includes>
							<targetPath>WEB-INF</targetPath>
							<filtering>true</filtering>
						</webResource>
						<webResource>
							<directory>${project.basedir}/../nca-api/src/main/resources</directory>
							<includes>
								<include>api.yaml</include>
							</includes>
							<!-- Should contain the API version -->
							<targetPath>schema/1</targetPath>
							<filtering>true</filtering>
						</webResource>
					</webResources>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${maven-resources-plugin.version}</version>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/swagger</outputDirectory>
							<resources>
								<resource>
									<directory>${project.basedir}</directory>
									<includes>
										<!-- Swagger needs this file in the output directory which just 
											e happens to be in the target directory. So yeah, it gets deleted after every 
											clean and such. -->
										<include>.swagger-codegen-ignore</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>io.swagger</groupId>
				<artifactId>swagger-codegen-maven-plugin</artifactId>
				<version>${swagger-codegen-maven-plugin.version}</version>
				<executions>
					<execution>
						<id>generate-java-domain</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<inputSpec>${project.basedir}/../nca-api/src/main/resources/api.yaml</inputSpec>
							<output>${project.build.directory}/swagger/</output>
							<addCompileSourceRoot>true</addCompileSourceRoot>
							<invokerPackage>${project.groupId}.api.service</invokerPackage>
							<apiPackage>${project.groupId}.api.service</apiPackage>
							<modelPackage>${project.groupId}.api.domain</modelPackage>
							<language>jaxrs</language>
							<library>jersey2</library>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>

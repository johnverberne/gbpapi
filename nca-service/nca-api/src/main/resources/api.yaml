swagger: '2.0'
info:
  # Some fields also need to be set in the web.xml. Swagger doesn't set these properly in the generated web.xml.
  # The fields in question: title, version and basepath.
  version: "1"
  title: Natural Capital Assessment API
  description: |
    ## TDB
  contact:
    name: RIVM
    email: TDB
    url: TDB
  license:
    name: TDB
    url: TDB
basePath: /api/1
consumes:
  - application/json
produces:
  - application/json
paths:
  /assessmentRequest:
    post:
      operationId: postAssessmentRequest
      tags:
        - assessmentRequest
      description: |
        TDB
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AssessmentRequest'
      responses:
        '200':
          description: |
            In case of normal behavior.
          schema:
            $ref: '#/definitions/AssessmentRequestResponse'
        '400':
          description: |
            In case of user error - thing of missing fields.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: API key is missing or invalid
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: |
            In case of system error. Please contact the helpdesk if this error persists.
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - apiKey: []
  /immediatlyAssessmentRequest:
    post:
      operationId: postImmediatlyAssessmentRequest
      tags:
        - immediatlyAssessmentRequest
      description: |
        Excecute a model and wait for the results and immediatly return the results list in the response.
        This is based on the assumption that running the model is very fast.
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AssessmentRequest'
      responses:
        '200':
          description: |
            In case of normal behavior.
          schema:
            $ref: '#/definitions/ImmediatlyAssessmentRequestResponse'
        '400':
          description: |
            In case of user error - thing of missing fields.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: API key is missing or invalid
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: |
            In case of system error. Please contact the helpdesk if this error persists.
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - apiKey: []
  /assessmentResult/{resultId}:
    get:
      operationId: getAssessmentResultById
      tags:
        - assessmentResult
      description: |
        Deze functie geeft een resultaten voor opgegeven apiKey en resultId.
      parameters:
        - name: apiKey
          in: query
          description: De API-key die is gebruikt bij andere Connect opdrachten.
          required: true
          type: string
        - name: resultId
          in: path
          description: ID of Assessment Result
          required: true
          type: string
      responses:
        '200':
          description: |
            Bij een normale afhandeling van de API functie.
          schema:
            $ref: '#/definitions/AssessmentResultsResponse'
        '400':
          description: |
            Bij gebruikersfout(en) - denk aan missende optioneel verplichte velden enz.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: |
            Bij een systeemfout. Neem a.u.b. contact op met de helpdesk als dit aanhoudt.
          schema:
            $ref: '#/definitions/ErrorResponse'
  /generateAPIKey:
    post:
      operationId: postGenerateAPIKey
      tags:
        - user
      description: |
        Generate a new API-key. The API-key will be e-mailed to the given e-mail address.
        This function can also be used to reset the API-key for a previous registered e-mail address.
        A previous API-key will be invalidated.
        The function returns via the field __successful__ if the request successed.
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GenerateAPIKeyRequest'
      responses:
        '200':
          description: |
            In case of normal behavior.
          schema:
            $ref: '#/definitions/ValidateResponse'
        '400':
          description: |
            In case of user error - thing of missing fields.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: |
            In case of system error. Please contact the helpdesk if this error persists.
          schema:
            $ref: '#/definitions/ErrorResponse'
  /status/jobs:
    get:
      operationId: getStatusJobs
      tags:
        - user
      description: |
        Deze functie geeft een statusoverzicht van de uitgevoerde taken die, voor een opgegeven API-key, zijn aangemeld, worden uitgevoerd of zijn afgerond.
      parameters:
        - name: apiKey
          in: query
          description: De API-key die is gebruikt bij andere Connect opdrachten.
          required: true
          type: string
      responses:
        '200':
          description: |
            Bij een normale afhandeling van de API functie.
          schema:
            $ref: '#/definitions/StatusJobResponse'
        '400':
          description: |
            Bij gebruikersfout(en) - denk aan missende optioneel verplichte velden enz.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: |
            Bij een systeemfout. Neem a.u.b. contact op met de helpdesk als dit aanhoudt.
          schema:
            $ref: '#/definitions/ErrorResponse'
            
securityDefinitions:
   apiKey:
     type: apiKey
     name: api_key
     in: query
definitions:
  AssessmentResultsResponse:
    type: object
    properties:
      entries:
        type: array
        items:
          $ref: '#/definitions/AssessmentResultResponse'  
  AssessmentResultResponse:
    type: object
    required:
      - code
    properties:
      code:
        type: integer
        format: int32
      name:
        type: string
      model:
        type: string  
      min:
        type: number
        format: double
      max:
        type: number
        format: double
      sum:
        type: number
        format: double
      avg:
        type: number 
        fromat: double
      units:
        type: string
      class:
        type: string    
      legendrgbmin:
        type: string
      legendrgbmax:
        type: string
      legendmin:   
        type: integer
        format: int32
      legendmax:
         type: integer
         format: int32
      geobox:
         $ref: '#/definitions/GeoBox'
  GeoBox:
    type: object
    properties:
      xmin:
        type: integer
        format: int32
      ymin:
        type: integer
        format: int32
      ymax:
        type: integer
        format: int32
      xmax:
        type: integer
        format: int32       
  AssessmentRequest:
    type: object
    required:
      - name
      - model
      - eco_system_service
      - layers
    properties:
      name:
        type: string
        description: A description given to this assessment request.
      model:
        type: string
        description: |
          A description given to this assessment request.
          supported values are: 
          ___AIR_REGULATION:___ Excecute model air_regulation.
          ___COOLING_IN_URBAN_AREAS:___ Excecute model cooling_in_urban_areas.
          ___ENERGY_SAVINGS_BY_SHELTER_TREES:___ Excecute energy_savings_by_shelter_trees model.      
          ___OTHER:___ Returns a warning not implemented.
        enum:
          - AIR_REGULATION
          - COOLING_IN_URBAN_AREAS
          - ENERGY_SAVINGS_BY_SHELTER_TREES
          - OTHER
      eco_system_service:
        type: string
        description: The eco system service for which an assessment request is made.
      layers:
        type: array
        minItems: 1
        items:
          $ref: '#/definitions/LayerObject'
  AssessmentRequestResponse:
    allOf:
      - $ref: '#/definitions/ValidateResponse'
      - properties:
          key:
            type: string
            description: A unique id to identify this request.
  ImmediatlyAssessmentRequestResponse:
    allOf:
      - $ref: '#/definitions/ValidateResponse'
      - properties:
          key:
            type: string
            description: A unique id to identify this request.
          assessmentResults:
            type: array
            items:
              $ref: '#/definitions/AssessmentResultResponse'       
  DataType:
    type: string
    description: |
      The data type of the layer data.
      Supported values are:
      ___GEOTIFF:___ ANK Classified GeoTIFF file.
    enum:
      - GEOTIFF
  ErrorResponse:
    type: object
    required:
      - code
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
  GenerateAPIKeyRequest:
    type: object
    required:
      - email
    properties:
      email:
        type: string
        description: A valid e-mail address.
  LayerObject:
    type: object
    discriminator: non-existent
    required:
      - classType
      - dataType
      - data
    properties:
      classType:
        type: string
        description: |
          The type of class the layer data enclosed in the layer.
      dataType:
        $ref: '#/definitions/DataType'
      data:
        type: string
        format: byte
        description: |
          The layer data. This data must be base64 encoded.
  ValidationMessage:
    type: object
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
        description: Validation code.
      message:
        type: string
        description: Validation text.
  ValidateResponse:
    type: object
    discriminator: non-existent
    properties:
      successful:
        type: boolean
        description: true in case the call was successful.
      errors:
        type: array
        items:
          $ref: '#/definitions/ValidationMessage'
      warnings:
        type: array
        items:
          $ref: '#/definitions/ValidationMessage'         
  JobState:
    type: string
    description: |
      De status van de job.

      ___QUEUED:___ De opdracht is ontvangen en staat in de wachtrij.
      ___RUNNING:___ De opdracht wordt op dit moment uitgevoerd.
      ___CANCELLED:___ De opdracht is afgebroken door de gebruiker.      
      ___COMPLETED:___ De opdracht is afgerond.
    enum:
      - QUEUED
      - RUNNING
      - CANCELLED
      - COMPLETED
  StatusJobProgress:
    type: object
    properties:
      key:
        type: string
        description:
          Bevat de unieke job key.
      state:
        $ref: "#/definitions/JobState"
      name:
        type: string
        description: Optioneel de door gebruiker opgegeven naam voor job.
      startDateTime:
        type: string
        format: date-time
        description: Startdatum en tijd.
      endDateTime:
        type: string
        format: date-time
        description: Einddatum en tijd.
  StatusJobResponse:
    type: object
    properties:
      entries:
        type: array
        items:
          $ref: '#/definitions/StatusJobProgress'